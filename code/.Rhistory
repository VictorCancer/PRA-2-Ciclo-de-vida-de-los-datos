train$GrupoEdad <- cut(train$Age, breaks = c(0,15,25,55,100), labels = c("Niños","Jóvenes","Adultos","Jubilados"))
train$Survived <- as.factor(train$Survived)
PGedad<-ggplot(train, aes(x=GrupoEdad, fill=Survived)) + geom_bar()
PGedad
ggplot(train, aes(x=Embarked, fill=Survived)) + geom_bar()
ggplot(train, aes(x=Parch, fill=Survived)) + geom_bar()
PClase<-ggplot(train, aes(x=Pclass, fill=Survived)) + geom_bar()
PClase
PSexo<-ggplot(train, aes(x=Sex, fill=Survived)) + geom_bar()
PSexo
ggplot(train, aes(x=SibSp, fill=Survived)) + geom_bar()
shapiro.test(train$Age)
fligner.test(Age.y ~ Survived, data = train)
shapiro.test(train$Parch)
shapiro.test(train$Fare)
fligner.test(Fare ~ Survived, data = train)
shapiro.test(train$SibSp)
fligner.test(SibSp ~ Survived, data = train)
temporal<-table(train$Survived, train$GrupoEdad)
plot(temporal, col=c("#9999FF","#CC66FF"), main="GrupoEdad vs Supervivientes")
chisq.test(temporal)
temporal<-table(train$Survived, train$Pclass)
plot(temporal, col=c("#9999FF","#CC66FF"), main="Clase vs Supervivientes")
chisq.test(temporal)
temporal2<-table(train$Survived, train$Sex)
plot(temporal2, col=c("#9999FF","#CC66FF"), main="Sexo vs Supervivencia")
chisq.test(temporal2)
tieneParch <- glm(Survived ~ Parch, family = binomial(link='logit'), data = train)
summary(tieneParch)
anova(tieneParch, test="Chisq")
ggarrange(PSexo, PGedad, PClase, labels = c("S", "E", "C"), ncol = 1, nrow = 3)
set.seed(345)
M0 <- glm( formula = Survived ~ Pclass + Sex + Age.y, data = train, family = binomial)
summary(M0)
M1 <- glm( formula = Survived ~ Pclass+ Sex, data = train, family = binomial)
summary(M1)
M3 <- glm( formula = Survived ~ Pclass, data = train, family = binomial)
summary(M3)
min(boxplot.stats(full$Fare)$out)
max(boxplot.stats(full$Fare)$out)
knitr::opts_chunk$set(echo = TRUE)
# Cargamos los paquetes R que vamos a usar
library(ggplot2)
library(dplyr)
# Cargamos el fichero de datos
totalData <- read.csv('titanic.csv',stringsAsFactors = FALSE)
filas=dim(totalData)[1]
# Verificamos la estructura del conjunto de datos
str(totalData)
#Estadísticas básicas
summary(totalData)
# Estadísticas de valores vacíos
colSums(is.na(totalData))
colSums(totalData=="")
# Tomamos valor "Desconocido" para los valores vacíos de la variable "country"
totalData$Embarked[totalData$country==""]="Desconocido"
# Tomamos la media para valores vacíos de la variable "Age"
totalData$Age[is.na(totalData$age)] <- mean(totalData$age,na.rm=T)
# Añadimos una variable nueva a los datos. Este valor es la edad discretizada con un método simple de intervalos de igual amplitud.
# Vemos cómo se distribuyen los valore
summary(totalData[,"age"])
# Discretizamos
totalData["segmento_edad"] <- cut(totalData$age, breaks = c(0,10,20,30,40,50,60,70,100), labels = c("0-9", "10-19", "20-29", "30-39","40-49","50-59","60-69","70-79"))
# Observamos los datos discretizados.
head(totalData)
# Vemos como se agrupan los datos.
plot(totalData$segmento_edad)
# Visualizamos la relación entre las variables "sex" y "survival":
ggplot(data=totalData[1:filas,],aes(x=gender,fill=survived))+geom_bar()
# Otro punto de vista. Survival como función de Embarked:
ggplot(data = totalData[1:filas,],aes(x=embarked,fill=survived))+geom_bar(position="fill")+ylab("Frecuencia")
t<-table(totalData[1:filas,]$embarked,totalData[1:filas,]$survived)
for (i in 1:dim(t)[1]){
t[i,]<-t[i,]/sum(t[i,])*100
}
t
# Ahora, podemos dividir el gráfico de Embarked por Pclass:
ggplot(data = totalData[1:filas,],aes(x=embarked,fill=survived))+geom_bar(position="fill")+facet_wrap(~class)
# Survivial como función de SibSp y Parch
ggplot(data = totalData[1:filas,],aes(x=sibsp,fill=survived))+geom_bar()
ggplot(data = totalData[1:filas,],aes(x=parch,fill=survived))+geom_bar()
# Vemos como las forma de estos dos gráficos es similar. Este hecho nos puede indicar presencia de correlaciones altas.
# Construimos un atributo nuevo: family size.
totalData$FamilySize <- totalData$sibsp + totalData$parch +1;
totalData1<-totalData[1:filas,]
ggplot(data = totalData1[!is.na(totalData[1:filas,]$FamilySize),],aes(x=FamilySize,fill=survived))+geom_histogram(binwidth =1,position="fill")+ylab("Frecuencia")
# Survival como función de age:
ggplot(data = totalData1[!(is.na(totalData[1:filas,]$age)),],aes(x=age,fill=survived))+geom_histogram(binwidth =3)
ggplot(data = totalData1[!is.na(totalData[1:filas,]$age),],aes(x=age,fill=survived))+geom_histogram(binwidth = 3,position="fill")+ylab("Frecuencia")
# Cargamos el juego de datos
datosAdult <- read.csv('http://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data',stringsAsFactors = FALSE, header = FALSE)
# Nombres de los atributos
names(datosAdult) <- c("age","workclass","fnlwgt","education","education-num","marital-status","occupation","relationship","race","sex","capital-gain","capital-loss","hour-per-week","native-country","income")
knitr::opts_chunk$set(echo = TRUE)
train$GrupoEdad <- cut(train$Age, breaks = c(0,15,25,55,100), labels = c("Niños","Jóvenes","Adultos","Jubilados"))
train$Survived <- as.factor(train$Survived)
PGedad<-ggplot(train, aes(x=GrupoEdad, fill=Survived)) + geom_bar()
PGedad
train$GrupoEdad <- cut(train$Age, breaks = c(0,15,25,55,100), labels = c("Niños","Jóvenes","Adultos","Jubilados"))
train$Survived <- as.factor(train$Survived)
PGedad<-ggplot(train, aes(x=GrupoEdad, fill=as.factor(Survived))) + geom_bar()
PGedad
train$GrupoEdad <- cut(train$Age, breaks = c(0,15,25,55,100), labels = c("Niños","Jóvenes","Adultos","Jubilados"))
train$Survived <- as.factor(train$Survived)
PGedad<-ggplot(train, aes(x=GrupoEdad, fill=Survived),position='fill') + geom_bar()
PGedad
train$GrupoEdad <- cut(train$Age, breaks = c(0,15,25,55,100), labels = c("Niños","Jóvenes","Adultos","Jubilados"))
train$Survived <- as.factor(train$Survived)
PGedad<-ggplot(train, aes(x=GrupoEdad, fill=Survived)) + geom_bar(position='fill')
PGedad
train$GrupoEdad <- cut(train$Age, breaks = c(0,15,25,55,100), labels = c("Niños","Jóvenes","Adultos","Ancianos"))
train$Survived <- as.factor(train$Survived)
PGedad<-ggplot(train, aes(x=GrupoEdad, fill=Survived)) + geom_bar(position='fill')
PGedad
train$GrupoEdad <- cut(train$Age, breaks = c(0,15,30,60,100), labels = c("Niños","Jóvenes","Adultos","Ancianos"))
train$Survived <- as.factor(train$Survived)
PGedad<-ggplot(train, aes(x=GrupoEdad, fill=Survived)) + geom_bar(position='fill')
PGedad
train$GrupoEdad <- cut(train$Age, breaks = c(0,16,30,60,100), labels = c("Niños","Jóvenes","Adultos","Ancianos"))
train$Survived <- as.factor(train$Survived)
PGedad<-ggplot(train, aes(x=GrupoEdad, fill=Survived)) + geom_bar(position='fill')
PGedad
ggplot(train, aes(x=Embarked, fill=Survived)) + geom_bar(position='fill')
ggplot(train, aes(x=Parch, fill=Survived))+ geom_bar(position='fill')
PClase<-ggplot(train, aes(x=Pclass, fill=Survived)) + geom_bar(position='fill')
PClase
PClase<-ggplot(train, aes(x=Pclass, fill=Survived)) + geom_bar(position='fill') + ylab('Porcentage de supervivientes')
PClase
ggplot(train, aes(x=Embarked, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
train$GrupoEdad <- cut(train$Age, breaks = c(0,16,30,60,100), labels = c("Niños","Jóvenes","Adultos","Ancianos"))
train$Survived <- as.factor(train$Survived)
PGedad<-ggplot(train, aes(x=GrupoEdad, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PGedad
PSexo<-ggplot(train, aes(x=Sex, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PSexo
ggplot(train, aes(x=SibSp, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
par(mfrow=c(2,2))
PGedad
ggplot(train, aes(x=Embarked, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
ggplot(train, aes(x=Parch, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
v
par(mfrow=c(2,2))
PGedad
ggplot(train, aes(x=Embarked, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
ggplot(train, aes(x=Parch, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PClase
#Edad
train$GrupoEdad <- cut(train$Age, breaks = c(0,16,30,60,100), labels = c("Niños","Jóvenes","Adultos","Ancianos"))
train$Survived <- as.factor(train$Survived)
PGedad<-ggplot(train, aes(x=GrupoEdad, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
Pembarked <-ggplot(train, aes(x=Embarked, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
Pparch <-ggplot(train, aes(x=Parch, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PClase<-ggplot(train, aes(x=Pclass, fill=Survived)) + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PSexo<-ggplot(train, aes(x=Sex, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PSibSp <- ggplot(train, aes(x=SibSp, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
#par(mfrow=c(2,2))
PGedad
Pembarked
Pparch
PClase
PSexo
PSibSp
shapiro.test(train$Age)$p
fligner.test(Age.y ~ Survived, data = train)
shapiro.test(train$Age)
fligner.test(Age.y ~ Survived, data = train)
shapiro.test(train$Age)$p
fligner.test(Age.y ~ Survived, data = train)$p
shapiro.test(train$Age)$p
fligner.test(Age.y ~ Survived, data = train)
var.test(x=train[train$Embarked=='S','PClass'],y=train[train$Embarked=='C','PClass'])
train$Embarked=='S'
train[train$Embarked=='S','PClass']
train[train$Embarked=='S',]
var.test(x=train[train$Embarked=='S','Pclass'],y=train[train$Embarked=='C','Pclass'])
var.test(x=train[train$Embarked=='S','Fare'],y=train[train$Embarked=='C','Fare'])
var.test(x=train[train$sex=='M','Age'],y=train[train$sex=='F','Age'])
var.test(x=train[train$sex=='M','age'],y=train[train$sex=='F','age'])
train$Sex
var.test(x=train[train$sex=='male','age'],y=train[train$sex=='female','age'])
var.test(x=train[train$sex=='male','Age'],y=train[train$sex=='female','Age'])
train
var.test(x=train[train$sex=='male','Age.y'],y=train[train$sex=='female','Age.y'])
var.test(x=train[train$Sex=='male','Age.y'],y=train[train$Sex=='female','Age.y'])
head(train)
cor_table <- cor(train[train,c("Survived","Pclass","Sex","SibSp","Parch","Fare","Embarked","Age.y")],use = "complete.obs")
cor_table <- cor(train,c("Survived","Pclass","Sex","SibSp","Parch","Fare","Embarked","Age.y")],use = "complete.obs")
cor_table <- cor(train[,c("Survived","Pclass","Sex","SibSp","Parch","Fare","Embarked","Age.y")],use = "complete.obs")
cor_table <- cor(train[c("Survived","Pclass","Sex","SibSp","Parch","Fare","Embarked","Age.y")],use = "complete.obs")
cor_table <- cor(train[,c("Survived","Pclass","Sex","SibSp","Parch","Fare","Embarked","Age.y")],use = "complete.obs")
cor_table <- cor(train[,c("Survived","Pclass","Sex","SibSp","Parch","Fare","Embarked","Age.y")],use = "complete.obs")
train[,c("Survived","Pclass","Sex","SibSp","Parch","Fare","Embarked","Age.y")]
cor(train)
class(train$Sex)
class(Embarked)
class(train$Embarked)
cor_table <- cor(train[,c("Survived","Pclass","SibSp","Parch","Fare","Age.y")],use = "complete.obs")
summary(train)
train <- read.table(file="train.csv",sep=',',dec='.',stringsAsFactors = TRUE,header=TRUE)
summary(train)
test <- read.table(file="test.csv",sep=',',dec='.',stringsAsFactors = TRUE,header=TRUE)
summary(test)
full <- rbind(test,train[-which(names(train) == "Survived")])
full[full$Embarked == "",]
full[full$Embarked=="",]$Embarked <- "C"
train[train$Embarked=="",]$Embarked <- "C"
fare_median <-  median(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare)
full[is.na(full$Fare),]$Fare <- fare_median
test[is.na(test$Fare),]$Fare <- fare_median
median_fare_1 <- median(full[full$Fare != 0 & full$Pclass == 1 & full$Embarked == 'S',]$Fare)
median_fare_2 <- median(full[full$Fare != 0 & full$Pclass == 2 & full$Embarked == 'S',]$Fare)
median_fare_3 <- median(full[full$Fare != 0 & full$Pclass == 3 & full$Embarked == 'S',]$Fare)
#Imputamos según la clase en los dataset que hemos generado:
full[full$Fare == 0 & full$Pclass == 1,]$Fare <- median_fare_1
full[full$Fare == 0 & full$Pclass == 2,]$Fare <- median_fare_2
full[full$Fare == 0 & full$Pclass == 3,]$Fare <- median_fare_3
train[train$Fare == 0 & train$Pclass == 1,]$Fare <- median_fare_1
train[train$Fare == 0 & train$Pclass == 2,]$Fare <- median_fare_2
train[train$Fare == 0 & train$Pclass == 3,]$Fare <- median_fare_3
test[test$Fare == 0 & test$Pclass == 1,]$Fare <- median_fare_1
#Los siguientes casos no existen en el dataset de test:
#test[test$Fare == 0 & test$Pclass == 2,]$Fare <- median_fare_2
#test[test$Fare == 0 & test$Pclass == 3,]$Fare <- median_fare_3
full_imp <- kNN(full,k=11,dist_var=c('Sex','Pclass','SibSp','Fare','Parch','Embarked'),variable='Age')
library(ggplot2)
library(corrplot)
library(faraway)
library(ggfortify)
library(ResourceSelection)
library(pROC)
library(grid)
library(colorspace)
library(Rcpp)
library(vctrs)
library(tidyverse)
library(VIM)
library(ggpubr)
library(caTools)
full_imp <- kNN(full,k=11,dist_var=c('Sex','Pclass','SibSp','Fare','Parch','Embarked'),variable='Age')
cor_table <- cor(train[,c("Survived","Pclass","Sex","SibSp","Parch","Fare","Embarked","Age.y")],use = "complete.obs")
cor_table <- cor(train[,c("Survived","Pclass","Sex","SibSp","Parch","Fare","Embarked","Age")],use = "complete.obs")
cor_table <- cor(as.numeric(train[,c("Survived","Pclass","Sex","SibSp","Parch","Fare","Embarked","Age")]),use = "complete.obs")
cor_table <- cor(as.numeric(train[,c("Survived","Pclass","SibSp","Parch","Fare","Age")]),use = "complete.obs")
cor_table <- cor(atrain[,c("Survived","Pclass","SibSp","Parch","Fare","Age")],use = "complete.obs")
cor_table <- cor(train[,c("Survived","Pclass","SibSp","Parch","Fare","Age")],use = "complete.obs")
corrplot.mixed(cor_table,upper="circle",number.cex=.7,tl.cex=.8, title="Correlacion entre variables", mar=c(0,0,1,0))
train
cor_table <- cor(train[,c("Survived","Pclass","SibSp","Parch","Fare","Age")],use = "complete.obs")
corrplot.mixed(cor_table,upper="circle",number.cex=.7,tl.cex=.8, title="Correlacion entre variables", mar=c(0,0,1,0))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(corrplot)
library(faraway)
library(ggfortify)
library(ResourceSelection)
library(pROC)
library(grid)
library(colorspace)
library(Rcpp)
library(vctrs)
library(tidyverse)
library(VIM)
library(ggpubr)
library(caTools)
train <- read.table(file="train.csv",sep=',',dec='.',stringsAsFactors = TRUE,header=TRUE)
summary(train)
test <- read.table(file="test.csv",sep=',',dec='.',stringsAsFactors = TRUE,header=TRUE)
summary(test)
full <- rbind(test,train[-which(names(train) == "Survived")])
full[full$Embarked == "",]
ggplot(full[full$Embarked != "" & full$Pclass == "1",],aes(x=Embarked,y=Fare, fill=Embarked)) + geom_boxplot()+
theme(legend.position="none") + geom_hline(aes(yintercept=80), colour='yellow', linetype='dashed', lwd=2)
full[full$Embarked=="",]$Embarked <- "C"
train[train$Embarked=="",]$Embarked <- "C"
full[is.na(full$Fare),]
ggplot(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,], aes(x=Fare)) +
geom_density(color="darkblue", fill="lightblue",size=1)+ylab("Densidad")+xlab("Precio del pasaje") +
geom_vline(xintercept = median(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare),color="red",size=1.1,linetype="dashed") +
geom_vline(xintercept = mean(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare),color="green",size=1.1,linetype="dashed") +
annotate(geom = "text", label = c("Mediana", "Media"), x = c(median(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare), mean(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare)), y = c(0.05, 0.05), angle = 90, vjust = 1)
fare_median <-  median(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare)
full[is.na(full$Fare),]$Fare <- fare_median
test[is.na(test$Fare),]$Fare <- fare_median
full[full$Fare == 0,]
median_fare_1 <- median(full[full$Fare != 0 & full$Pclass == 1 & full$Embarked == 'S',]$Fare)
median_fare_2 <- median(full[full$Fare != 0 & full$Pclass == 2 & full$Embarked == 'S',]$Fare)
median_fare_3 <- median(full[full$Fare != 0 & full$Pclass == 3 & full$Embarked == 'S',]$Fare)
#Imputamos según la clase en los dataset que hemos generado:
full[full$Fare == 0 & full$Pclass == 1,]$Fare <- median_fare_1
full[full$Fare == 0 & full$Pclass == 2,]$Fare <- median_fare_2
full[full$Fare == 0 & full$Pclass == 3,]$Fare <- median_fare_3
train[train$Fare == 0 & train$Pclass == 1,]$Fare <- median_fare_1
train[train$Fare == 0 & train$Pclass == 2,]$Fare <- median_fare_2
train[train$Fare == 0 & train$Pclass == 3,]$Fare <- median_fare_3
test[test$Fare == 0 & test$Pclass == 1,]$Fare <- median_fare_1
#Los siguientes casos no existen en el dataset de test:
#test[test$Fare == 0 & test$Pclass == 2,]$Fare <- median_fare_2
#test[test$Fare == 0 & test$Pclass == 3,]$Fare <- median_fare_3
full_imp <- kNN(full,k=11,dist_var=c('Sex','Pclass','SibSp','Fare','Parch','Embarked'),variable='Age')
ggplot() +
geom_density(data=full_imp, aes(x=Age,color='Imputado') , size=1) +
geom_density(data=full, aes(x=Age, color = 'No imputado') ,size=1) +
geom_vline(xintercept = median(full$Age,na.rm = TRUE),color="blue",size=1.1,linetype="dashed") +
geom_vline(xintercept = median(full_imp$Age),color="red",size=1.1,linetype="dashed") +
ylab("Frecuencia") + xlab("Edad") + theme(legend.position = 'right') +
scale_color_manual("DataSet",values = c('Imputado' = 'red', 'No imputado' = 'blue'))
full$Age <- full_imp$Age
train <- merge(train, full_imp[c('PassengerId','Age')], by.x=c("PassengerId"), by.y=c("PassengerId"), all.x=TRUE)
train <- train[,-which(names(train) %in% c("Age.x","PassengerId.y"))]
train %>% rename( Age = Age.y )
test <- merge(test, full_imp[c('PassengerId','Age')], by.x=c("PassengerId"), by.y=c("PassengerId"), all.x=TRUE)
test <- test[,-which(names(test) %in% c("Age.x","PassengerId.y"))]
test %>% rename( Age = Age.y )
borrar<-c("PassengerId","Name","Ticket","Pclass","Embarked","Survived","Sex","Cabin" )
fullr<-full[,!names(full) %in% borrar]
boxplot(fullr, col=rainbow(ncol(fullr)))
min(boxplot.stats(full$Age)$out)
max(boxplot.stats(full$Age)$out)
min(boxplot.stats(full$Fare)$out)
max(boxplot.stats(full$Fare)$out)
#Edad
train$GrupoEdad <- cut(train$Age, breaks = c(0,16,30,60,100), labels = c("Niños","Jóvenes","Adultos","Ancianos"))
train$Survived <- as.factor(train$Survived)
PGedad<-ggplot(train, aes(x=GrupoEdad, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
Pembarked <-ggplot(train, aes(x=Embarked, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
Pparch <-ggplot(train, aes(x=Parch, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PClase<-ggplot(train, aes(x=Pclass, fill=Survived)) + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PSexo<-ggplot(train, aes(x=Sex, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PSibSp <- ggplot(train, aes(x=SibSp, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PGedad
Pembarked
Pparch
PClase
PSexo
PSibSp
var.test(x=train[train$Embarked=='S','Fare'],y=train[train$Embarked=='C','Fare'])
var.test(x=train[train$Sex=='male','Age.y'],y=train[train$Sex=='female','Age.y'])
cor_table <- cor(train[,c("Survived","Pclass","SibSp","Parch","Fare","Age")],use = "complete.obs")
train
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(corrplot)
library(faraway)
library(ggfortify)
library(ResourceSelection)
library(pROC)
library(grid)
library(colorspace)
library(Rcpp)
library(vctrs)
library(tidyverse)
library(VIM)
library(ggpubr)
library(caTools)
train <- read.table(file="train.csv",sep=',',dec='.',stringsAsFactors = TRUE,header=TRUE)
summary(train)
test <- read.table(file="test.csv",sep=',',dec='.',stringsAsFactors = TRUE,header=TRUE)
summary(test)
full <- rbind(test,train[-which(names(train) == "Survived")])
full[full$Embarked == "",]
ggplot(full[full$Embarked != "" & full$Pclass == "1",],aes(x=Embarked,y=Fare, fill=Embarked)) + geom_boxplot()+
theme(legend.position="none") + geom_hline(aes(yintercept=80), colour='yellow', linetype='dashed', lwd=2)
full[full$Embarked=="",]$Embarked <- "C"
train[train$Embarked=="",]$Embarked <- "C"
full[is.na(full$Fare),]
ggplot(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,], aes(x=Fare)) +
geom_density(color="darkblue", fill="lightblue",size=1)+ylab("Densidad")+xlab("Precio del pasaje") +
geom_vline(xintercept = median(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare),color="red",size=1.1,linetype="dashed") +
geom_vline(xintercept = mean(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare),color="green",size=1.1,linetype="dashed") +
annotate(geom = "text", label = c("Mediana", "Media"), x = c(median(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare), mean(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare)), y = c(0.05, 0.05), angle = 90, vjust = 1)
fare_median <-  median(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare)
full[is.na(full$Fare),]$Fare <- fare_median
test[is.na(test$Fare),]$Fare <- fare_median
full[full$Fare == 0,]
median_fare_1 <- median(full[full$Fare != 0 & full$Pclass == 1 & full$Embarked == 'S',]$Fare)
median_fare_2 <- median(full[full$Fare != 0 & full$Pclass == 2 & full$Embarked == 'S',]$Fare)
median_fare_3 <- median(full[full$Fare != 0 & full$Pclass == 3 & full$Embarked == 'S',]$Fare)
#Imputamos según la clase en los dataset que hemos generado:
full[full$Fare == 0 & full$Pclass == 1,]$Fare <- median_fare_1
full[full$Fare == 0 & full$Pclass == 2,]$Fare <- median_fare_2
full[full$Fare == 0 & full$Pclass == 3,]$Fare <- median_fare_3
train[train$Fare == 0 & train$Pclass == 1,]$Fare <- median_fare_1
train[train$Fare == 0 & train$Pclass == 2,]$Fare <- median_fare_2
train[train$Fare == 0 & train$Pclass == 3,]$Fare <- median_fare_3
test[test$Fare == 0 & test$Pclass == 1,]$Fare <- median_fare_1
#Los siguientes casos no existen en el dataset de test:
#test[test$Fare == 0 & test$Pclass == 2,]$Fare <- median_fare_2
#test[test$Fare == 0 & test$Pclass == 3,]$Fare <- median_fare_3
full_imp <- kNN(full,k=11,dist_var=c('Sex','Pclass','SibSp','Fare','Parch','Embarked'),variable='Age')
ggplot() +
geom_density(data=full_imp, aes(x=Age,color='Imputado') , size=1) +
geom_density(data=full, aes(x=Age, color = 'No imputado') ,size=1) +
geom_vline(xintercept = median(full$Age,na.rm = TRUE),color="blue",size=1.1,linetype="dashed") +
geom_vline(xintercept = median(full_imp$Age),color="red",size=1.1,linetype="dashed") +
ylab("Frecuencia") + xlab("Edad") + theme(legend.position = 'right') +
scale_color_manual("DataSet",values = c('Imputado' = 'red', 'No imputado' = 'blue'))
train
full$Age <- full_imp$Age
train <- merge(train, full_imp[c('PassengerId','Age')], by.x=c("PassengerId"), by.y=c("PassengerId"), all.x=TRUE)
train <- train[,-which(names(train) %in% c("Age.x","PassengerId.y"))]
#train %>% rename( Age = Age.y )
test <- merge(test, full_imp[c('PassengerId','Age')], by.x=c("PassengerId"), by.y=c("PassengerId"), all.x=TRUE)
test <- test[,-which(names(test) %in% c("Age.x","PassengerId.y"))]
#test %>% rename( Age = Age.y )
train
train %>% rename( Age = Age.y )
train
train$Survived <- as.numeric(train$Survived)
train$Pclass <- as.numeric(train$Pclass)
cor_table <- cor(train[,c("Survived","Pclass","SibSp","Parch","Fare","Age")],use = "complete.obs")
train$Survived <- as.numeric(train$Survived)
train$Pclass <- as.numeric(train$Pclass)
cor_table <- cor(train[,c("Survived","Pclass","SibSp","Parch","Fare","Age")],use = "complete.obs")
summary(train)
train$Survived <- as.numeric(train$Survived)
train$Pclass <- as.numeric(train$Pclass)
cor_table <- cor(train[,c("Survived","Pclass","SibSp","Parch","Fare","Age")],use = "complete.obs")
train
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(corrplot)
library(faraway)
library(ggfortify)
library(ResourceSelection)
library(pROC)
library(grid)
library(colorspace)
library(Rcpp)
library(vctrs)
library(tidyverse)
library(VIM)
library(ggpubr)
library(caTools)
train <- read.table(file="train.csv",sep=',',dec='.',stringsAsFactors = TRUE,header=TRUE)
summary(train)
test <- read.table(file="test.csv",sep=',',dec='.',stringsAsFactors = TRUE,header=TRUE)
summary(test)
full <- rbind(test,train[-which(names(train) == "Survived")])
full[full$Embarked == "",]
ggplot(full[full$Embarked != "" & full$Pclass == "1",],aes(x=Embarked,y=Fare, fill=Embarked)) + geom_boxplot()+
theme(legend.position="none") + geom_hline(aes(yintercept=80), colour='yellow', linetype='dashed', lwd=2)
full[full$Embarked=="",]$Embarked <- "C"
train[train$Embarked=="",]$Embarked <- "C"
full[is.na(full$Fare),]
ggplot(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,], aes(x=Fare)) +
geom_density(color="darkblue", fill="lightblue",size=1)+ylab("Densidad")+xlab("Precio del pasaje") +
geom_vline(xintercept = median(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare),color="red",size=1.1,linetype="dashed") +
geom_vline(xintercept = mean(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare),color="green",size=1.1,linetype="dashed") +
annotate(geom = "text", label = c("Mediana", "Media"), x = c(median(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare), mean(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare)), y = c(0.05, 0.05), angle = 90, vjust = 1)
fare_median <-  median(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare)
full[is.na(full$Fare),]$Fare <- fare_median
test[is.na(test$Fare),]$Fare <- fare_median
full[full$Fare == 0,]
median_fare_1 <- median(full[full$Fare != 0 & full$Pclass == 1 & full$Embarked == 'S',]$Fare)
median_fare_2 <- median(full[full$Fare != 0 & full$Pclass == 2 & full$Embarked == 'S',]$Fare)
median_fare_3 <- median(full[full$Fare != 0 & full$Pclass == 3 & full$Embarked == 'S',]$Fare)
#Imputamos según la clase en los dataset que hemos generado:
full[full$Fare == 0 & full$Pclass == 1,]$Fare <- median_fare_1
full[full$Fare == 0 & full$Pclass == 2,]$Fare <- median_fare_2
full[full$Fare == 0 & full$Pclass == 3,]$Fare <- median_fare_3
train[train$Fare == 0 & train$Pclass == 1,]$Fare <- median_fare_1
train[train$Fare == 0 & train$Pclass == 2,]$Fare <- median_fare_2
train[train$Fare == 0 & train$Pclass == 3,]$Fare <- median_fare_3
test[test$Fare == 0 & test$Pclass == 1,]$Fare <- median_fare_1
#Los siguientes casos no existen en el dataset de test:
#test[test$Fare == 0 & test$Pclass == 2,]$Fare <- median_fare_2
#test[test$Fare == 0 & test$Pclass == 3,]$Fare <- median_fare_3
full_imp <- kNN(full,k=11,dist_var=c('Sex','Pclass','SibSp','Fare','Parch','Embarked'),variable='Age')
ggplot() +
geom_density(data=full_imp, aes(x=Age,color='Imputado') , size=1) +
geom_density(data=full, aes(x=Age, color = 'No imputado') ,size=1) +
geom_vline(xintercept = median(full$Age,na.rm = TRUE),color="blue",size=1.1,linetype="dashed") +
geom_vline(xintercept = median(full_imp$Age),color="red",size=1.1,linetype="dashed") +
ylab("Frecuencia") + xlab("Edad") + theme(legend.position = 'right') +
scale_color_manual("DataSet",values = c('Imputado' = 'red', 'No imputado' = 'blue'))
full$Age <- full_imp$Age
train <- merge(train, full_imp[c('PassengerId','Age')], by.x=c("PassengerId"), by.y=c("PassengerId"), all.x=TRUE)
train <- train[,-which(names(train) %in% c("Age.x","PassengerId.y"))]
train <- train %>% rename( Age = Age.y )
test <- merge(test, full_imp[c('PassengerId','Age')], by.x=c("PassengerId"), by.y=c("PassengerId"), all.x=TRUE)
test <- test[,-which(names(test) %in% c("Age.x","PassengerId.y"))]
test <- test %>% rename( Age = Age.y )
borrar<-c("PassengerId","Name","Ticket","Pclass","Embarked","Survived","Sex","Cabin" )
fullr<-full[,!names(full) %in% borrar]
boxplot(fullr, col=rainbow(ncol(fullr)))
min(boxplot.stats(full$Age)$out)
max(boxplot.stats(full$Age)$out)
min(boxplot.stats(full$Fare)$out)
max(boxplot.stats(full$Fare)$out)
#Edad
train$GrupoEdad <- cut(train$Age, breaks = c(0,16,30,60,100), labels = c("Niños","Jóvenes","Adultos","Ancianos"))
train$Survived <- as.factor(train$Survived)
PGedad<-ggplot(train, aes(x=GrupoEdad, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
Pembarked <-ggplot(train, aes(x=Embarked, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
Pparch <-ggplot(train, aes(x=Parch, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PClase<-ggplot(train, aes(x=Pclass, fill=Survived)) + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PSexo<-ggplot(train, aes(x=Sex, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PSibSp <- ggplot(train, aes(x=SibSp, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PGedad
Pembarked
Pparch
PClase
PSexo
PSibSp
var.test(x=train[train$Embarked=='S','Fare'],y=train[train$Embarked=='C','Fare'])
var.test(x=train[train$Sex=='male','Age'],y=train[train$Sex=='female','Age'])
train
cor_table <- cor(train[,c("Survived","Pclass","SibSp","Parch","Fare","Age")],use = "complete.obs")
train$Survived <- as.numeric(train$Survived)
train$Pclass <- as.numeric(train$Pclass)
cor_table <- cor(train[,c("Survived","Pclass","SibSp","Parch","Fare","Age")],use = "complete.obs")
corrplot.mixed(cor_table,upper="circle",number.cex=.7,tl.cex=.8, title="Correlacion entre variables", mar=c(0,0,1,0))
