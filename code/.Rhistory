full <- rbind(test,train[-which(names(train) == "Survived")])
full[full$Embarked == "",]
ggplot(full[full$Embarked != "" & full$Pclass == "1",],aes(x=Embarked,y=Fare, fill=Embarked)) + geom_boxplot()+
theme(legend.position="none") + geom_hline(aes(yintercept=80), colour='yellow', linetype='dashed', lwd=2)
full[full$Embarked=="",]$Embarked <- "C"
train[train$Embarked=="",]$Embarked <- "C"
full[is.na(full$Fare),]
ggplot(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,], aes(x=Fare)) +
geom_density(color="darkblue", fill="lightblue",size=1)+ylab("Densidad")+xlab("Precio del pasaje") +
geom_vline(xintercept = median(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare),color="red",size=1.1,linetype="dashed") +
geom_vline(xintercept = mean(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare),color="green",size=1.1,linetype="dashed") +
annotate(geom = "text", label = c("Mediana", "Media"), x = c(median(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare), mean(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare)), y = c(0.05, 0.05), angle = 90, vjust = 1)
fare_median <-  median(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare)
full[is.na(full$Fare),]$Fare <- fare_median
test[is.na(test$Fare),]$Fare <- fare_median
full[full$Fare == 0,]
median_fare_1 <- median(full[full$Fare != 0 & full$Pclass == 1 & full$Embarked == 'S',]$Fare)
median_fare_2 <- median(full[full$Fare != 0 & full$Pclass == 2 & full$Embarked == 'S',]$Fare)
median_fare_3 <- median(full[full$Fare != 0 & full$Pclass == 3 & full$Embarked == 'S',]$Fare)
#Imputamos según la clase en los dataset que hemos generado:
full[full$Fare == 0 & full$Pclass == 1,]$Fare <- median_fare_1
full[full$Fare == 0 & full$Pclass == 2,]$Fare <- median_fare_2
full[full$Fare == 0 & full$Pclass == 3,]$Fare <- median_fare_3
train[train$Fare == 0 & train$Pclass == 1,]$Fare <- median_fare_1
train[train$Fare == 0 & train$Pclass == 2,]$Fare <- median_fare_2
train[train$Fare == 0 & train$Pclass == 3,]$Fare <- median_fare_3
test[test$Fare == 0 & test$Pclass == 1,]$Fare <- median_fare_1
#Los siguientes casos no existen en el dataset de test:
#test[test$Fare == 0 & test$Pclass == 2,]$Fare <- median_fare_2
#test[test$Fare == 0 & test$Pclass == 3,]$Fare <- median_fare_3
full_imp <- kNN(full,k=11,dist_var=c('Sex','Pclass','SibSp','Fare','Parch','Embarked'),variable='Age')
ggplot() +
geom_density(data=full_imp, aes(x=Age,color='Imputado') , size=1) +
geom_density(data=full, aes(x=Age, color = 'No imputado') ,size=1) +
geom_vline(xintercept = median(full$Age,na.rm = TRUE),color="blue",size=1.1,linetype="dashed") +
geom_vline(xintercept = median(full_imp$Age),color="red",size=1.1,linetype="dashed") +
ylab("Frecuencia") + xlab("Edad") + theme(legend.position = 'right') +
scale_color_manual("DataSet",values = c('Imputado' = 'red', 'No imputado' = 'blue'))
full$Age <- full_imp$Age
train <- merge(train, full_imp[c('PassengerId','Age')], by.x=c("PassengerId"), by.y=c("PassengerId"), all.x=TRUE)
train <- train[,-which(names(train) %in% c("Age.x","PassengerId.y"))]
train <- train %>% rename( Age = Age.y )
test <- merge(test, full_imp[c('PassengerId','Age')], by.x=c("PassengerId"), by.y=c("PassengerId"), all.x=TRUE)
test <- test[,-which(names(test) %in% c("Age.x","PassengerId.y"))]
test <- test %>% rename( Age = Age.y )
borrar<-c("PassengerId","Name","Ticket","Pclass","Embarked","Survived","Sex","Cabin" )
fullr<-full[,!names(full) %in% borrar]
boxplot(fullr, col=rainbow(ncol(fullr)))
min(boxplot.stats(full$Age)$out)
max(boxplot.stats(full$Age)$out)
min(boxplot.stats(full$Fare)$out)
max(boxplot.stats(full$Fare)$out)
#Edad
train$GrupoEdad <- cut(train$Age, breaks = c(0,16,30,60,100), labels = c("Niños","Jóvenes","Adultos","Ancianos"))
train$Survived <- as.factor(train$Survived)
PGedad<-ggplot(train, aes(x=GrupoEdad, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
Pembarked <-ggplot(train, aes(x=Embarked, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
Pparch <-ggplot(train, aes(x=Parch, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PClase<-ggplot(train, aes(x=Pclass, fill=Survived)) + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PSexo<-ggplot(train, aes(x=Sex, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PSibSp <- ggplot(train, aes(x=SibSp, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PGedad
Pembarked
Pparch
PClase
PSexo
PSibSp
var.test(x=train[train$Embarked=='S','Fare'],y=train[train$Embarked=='C','Fare'])
var.test(x=train[train$Sex=='male','Age'],y=train[train$Sex=='female','Age'])
train$Survived <- as.numeric(train$Survived)
train$Pclass <- as.numeric(train$Pclass)
cor_table <- cor(train[,c("Survived","Pclass","SibSp","Parch","Fare","Age")],use = "complete.obs")
corrplot.mixed(cor_table,upper="circle",number.cex=.7,tl.cex=.8, title="Correlacion entre variables", mar=c(0,0,1,0))
train$Survived <- as.factor(train$Survived)
train$Pclass <- as.factor(train$Pclass)
test_prop <- function(x,NC){
p1 <- sum(x$Survived == 1 & x$Pclass== 3) / sum(x$Pclass== 3)
p2 <- sum(x$Survived == 1 & x$Pclass!=3) / sum(x$Pclass!= 3)
#Podemos calcular p sin necesidad de utilizar la formula de arriba
p <- sum(x$Survived == 1) / nrow(x)
n1 <- sum(x$Pclass== 3)
n2 <- sum(x$Pclass!= 3)
zobs <- (p1-p2)/sqrt(p*(1-p)*((1/n1)+(1/n2)))
zcrit <- qnorm(1-NC/100, lower.tail=TRUE)
pobs <- pnorm(zobs,lower.tail=TRUE)
round(c(zobs,zcrit,pobs,p1,p2),3)
}
test_prop(train,95)
#Edad
train$GrupoEdad <- cut(train$Age, breaks = c(0,16,30,60,100), labels = c("Niños","Jóvenes","Adultos","Ancianos"))
train$Survived <- as.factor(train$Survived)
PGedad<-ggplot(train, aes(x=GrupoEdad, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
Pembarked <-ggplot(train, aes(x=Embarked, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
Pparch <-ggplot(train, aes(x=Parch, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PClase<-ggplot(train, aes(x=Pclass, fill=Survived)) + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PSexo<-ggplot(train, aes(x=Sex, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PSibSp <- ggplot(train, aes(x=SibSp, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PGedad
Pembarked
Pparch
PClase
PSexo
PSibSp
train$Pclass
train$Pclass == 3
train$Survived
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(corrplot)
library(faraway)
library(ggfortify)
library(ResourceSelection)
library(pROC)
library(grid)
library(colorspace)
library(Rcpp)
library(vctrs)
library(tidyverse)
library(VIM)
library(ggpubr)
library(caTools)
train <- read.table(file="train.csv",sep=',',dec='.',stringsAsFactors = TRUE,header=TRUE)
summary(train)
test <- read.table(file="test.csv",sep=',',dec='.',stringsAsFactors = TRUE,header=TRUE)
summary(test)
full <- rbind(test,train[-which(names(train) == "Survived")])
full[full$Embarked == "",]
ggplot(full[full$Embarked != "" & full$Pclass == "1",],aes(x=Embarked,y=Fare, fill=Embarked)) + geom_boxplot()+
theme(legend.position="none") + geom_hline(aes(yintercept=80), colour='yellow', linetype='dashed', lwd=2)
full[full$Embarked=="",]$Embarked <- "C"
train[train$Embarked=="",]$Embarked <- "C"
full[is.na(full$Fare),]
ggplot(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,], aes(x=Fare)) +
geom_density(color="darkblue", fill="lightblue",size=1)+ylab("Densidad")+xlab("Precio del pasaje") +
geom_vline(xintercept = median(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare),color="red",size=1.1,linetype="dashed") +
geom_vline(xintercept = mean(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare),color="green",size=1.1,linetype="dashed") +
annotate(geom = "text", label = c("Mediana", "Media"), x = c(median(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare), mean(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare)), y = c(0.05, 0.05), angle = 90, vjust = 1)
fare_median <-  median(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare)
full[is.na(full$Fare),]$Fare <- fare_median
test[is.na(test$Fare),]$Fare <- fare_median
full[full$Fare == 0,]
median_fare_1 <- median(full[full$Fare != 0 & full$Pclass == 1 & full$Embarked == 'S',]$Fare)
median_fare_2 <- median(full[full$Fare != 0 & full$Pclass == 2 & full$Embarked == 'S',]$Fare)
median_fare_3 <- median(full[full$Fare != 0 & full$Pclass == 3 & full$Embarked == 'S',]$Fare)
#Imputamos según la clase en los dataset que hemos generado:
full[full$Fare == 0 & full$Pclass == 1,]$Fare <- median_fare_1
full[full$Fare == 0 & full$Pclass == 2,]$Fare <- median_fare_2
full[full$Fare == 0 & full$Pclass == 3,]$Fare <- median_fare_3
train[train$Fare == 0 & train$Pclass == 1,]$Fare <- median_fare_1
train[train$Fare == 0 & train$Pclass == 2,]$Fare <- median_fare_2
train[train$Fare == 0 & train$Pclass == 3,]$Fare <- median_fare_3
test[test$Fare == 0 & test$Pclass == 1,]$Fare <- median_fare_1
#Los siguientes casos no existen en el dataset de test:
#test[test$Fare == 0 & test$Pclass == 2,]$Fare <- median_fare_2
#test[test$Fare == 0 & test$Pclass == 3,]$Fare <- median_fare_3
full_imp <- kNN(full,k=11,dist_var=c('Sex','Pclass','SibSp','Fare','Parch','Embarked'),variable='Age')
ggplot() +
geom_density(data=full_imp, aes(x=Age,color='Imputado') , size=1) +
geom_density(data=full, aes(x=Age, color = 'No imputado') ,size=1) +
geom_vline(xintercept = median(full$Age,na.rm = TRUE),color="blue",size=1.1,linetype="dashed") +
geom_vline(xintercept = median(full_imp$Age),color="red",size=1.1,linetype="dashed") +
ylab("Frecuencia") + xlab("Edad") + theme(legend.position = 'right') +
scale_color_manual("DataSet",values = c('Imputado' = 'red', 'No imputado' = 'blue'))
full$Age <- full_imp$Age
train <- merge(train, full_imp[c('PassengerId','Age')], by.x=c("PassengerId"), by.y=c("PassengerId"), all.x=TRUE)
train <- train[,-which(names(train) %in% c("Age.x","PassengerId.y"))]
train <- train %>% rename( Age = Age.y )
test <- merge(test, full_imp[c('PassengerId','Age')], by.x=c("PassengerId"), by.y=c("PassengerId"), all.x=TRUE)
test <- test[,-which(names(test) %in% c("Age.x","PassengerId.y"))]
test <- test %>% rename( Age = Age.y )
borrar<-c("PassengerId","Name","Ticket","Pclass","Embarked","Survived","Sex","Cabin" )
fullr<-full[,!names(full) %in% borrar]
boxplot(fullr, col=rainbow(ncol(fullr)))
min(boxplot.stats(full$Age)$out)
max(boxplot.stats(full$Age)$out)
min(boxplot.stats(full$Fare)$out)
max(boxplot.stats(full$Fare)$out)
#Edad
train$GrupoEdad <- cut(train$Age, breaks = c(0,16,30,60,100), labels = c("Niños","Jóvenes","Adultos","Ancianos"))
train$Survived <- as.factor(train$Survived)
PGedad<-ggplot(train, aes(x=GrupoEdad, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
Pembarked <-ggplot(train, aes(x=Embarked, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
Pparch <-ggplot(train, aes(x=Parch, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PClase<-ggplot(train, aes(x=Pclass, fill=Survived)) + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PSexo<-ggplot(train, aes(x=Sex, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PSibSp <- ggplot(train, aes(x=SibSp, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PGedad
Pembarked
Pparch
PClase
PSexo
PSibSp
var.test(x=train[train$Embarked=='S','Fare'],y=train[train$Embarked=='C','Fare'])
var.test(x=train[train$Sex=='male','Age'],y=train[train$Sex=='female','Age'])
train$Survived
train$Survived <- as.numeric(train$Survived)
train$Pclass <- as.numeric(train$Pclass)
train$Survived
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(corrplot)
library(faraway)
library(ggfortify)
library(ResourceSelection)
library(pROC)
library(grid)
library(colorspace)
library(Rcpp)
library(vctrs)
library(tidyverse)
library(VIM)
library(ggpubr)
library(caTools)
train <- read.table(file="train.csv",sep=',',dec='.',stringsAsFactors = TRUE,header=TRUE)
summary(train)
test <- read.table(file="test.csv",sep=',',dec='.',stringsAsFactors = TRUE,header=TRUE)
summary(test)
full <- rbind(test,train[-which(names(train) == "Survived")])
full[full$Embarked == "",]
ggplot(full[full$Embarked != "" & full$Pclass == "1",],aes(x=Embarked,y=Fare, fill=Embarked)) + geom_boxplot()+
theme(legend.position="none") + geom_hline(aes(yintercept=80), colour='yellow', linetype='dashed', lwd=2)
full[full$Embarked=="",]$Embarked <- "C"
train[train$Embarked=="",]$Embarked <- "C"
full[is.na(full$Fare),]
ggplot(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,], aes(x=Fare)) +
geom_density(color="darkblue", fill="lightblue",size=1)+ylab("Densidad")+xlab("Precio del pasaje") +
geom_vline(xintercept = median(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare),color="red",size=1.1,linetype="dashed") +
geom_vline(xintercept = mean(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare),color="green",size=1.1,linetype="dashed") +
annotate(geom = "text", label = c("Mediana", "Media"), x = c(median(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare), mean(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare)), y = c(0.05, 0.05), angle = 90, vjust = 1)
fare_median <-  median(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare)
full[is.na(full$Fare),]$Fare <- fare_median
test[is.na(test$Fare),]$Fare <- fare_median
full[full$Fare == 0,]
median_fare_1 <- median(full[full$Fare != 0 & full$Pclass == 1 & full$Embarked == 'S',]$Fare)
median_fare_2 <- median(full[full$Fare != 0 & full$Pclass == 2 & full$Embarked == 'S',]$Fare)
median_fare_3 <- median(full[full$Fare != 0 & full$Pclass == 3 & full$Embarked == 'S',]$Fare)
#Imputamos según la clase en los dataset que hemos generado:
full[full$Fare == 0 & full$Pclass == 1,]$Fare <- median_fare_1
full[full$Fare == 0 & full$Pclass == 2,]$Fare <- median_fare_2
full[full$Fare == 0 & full$Pclass == 3,]$Fare <- median_fare_3
train[train$Fare == 0 & train$Pclass == 1,]$Fare <- median_fare_1
train[train$Fare == 0 & train$Pclass == 2,]$Fare <- median_fare_2
train[train$Fare == 0 & train$Pclass == 3,]$Fare <- median_fare_3
test[test$Fare == 0 & test$Pclass == 1,]$Fare <- median_fare_1
#Los siguientes casos no existen en el dataset de test:
#test[test$Fare == 0 & test$Pclass == 2,]$Fare <- median_fare_2
#test[test$Fare == 0 & test$Pclass == 3,]$Fare <- median_fare_3
full_imp <- kNN(full,k=11,dist_var=c('Sex','Pclass','SibSp','Fare','Parch','Embarked'),variable='Age')
ggplot() +
geom_density(data=full_imp, aes(x=Age,color='Imputado') , size=1) +
geom_density(data=full, aes(x=Age, color = 'No imputado') ,size=1) +
geom_vline(xintercept = median(full$Age,na.rm = TRUE),color="blue",size=1.1,linetype="dashed") +
geom_vline(xintercept = median(full_imp$Age),color="red",size=1.1,linetype="dashed") +
ylab("Frecuencia") + xlab("Edad") + theme(legend.position = 'right') +
scale_color_manual("DataSet",values = c('Imputado' = 'red', 'No imputado' = 'blue'))
full$Age <- full_imp$Age
train <- merge(train, full_imp[c('PassengerId','Age')], by.x=c("PassengerId"), by.y=c("PassengerId"), all.x=TRUE)
train <- train[,-which(names(train) %in% c("Age.x","PassengerId.y"))]
train <- train %>% rename( Age = Age.y )
test <- merge(test, full_imp[c('PassengerId','Age')], by.x=c("PassengerId"), by.y=c("PassengerId"), all.x=TRUE)
test <- test[,-which(names(test) %in% c("Age.x","PassengerId.y"))]
test <- test %>% rename( Age = Age.y )
borrar<-c("PassengerId","Name","Ticket","Pclass","Embarked","Survived","Sex","Cabin" )
fullr<-full[,!names(full) %in% borrar]
boxplot(fullr, col=rainbow(ncol(fullr)))
min(boxplot.stats(full$Age)$out)
max(boxplot.stats(full$Age)$out)
min(boxplot.stats(full$Fare)$out)
max(boxplot.stats(full$Fare)$out)
#Edad
train$GrupoEdad <- cut(train$Age, breaks = c(0,16,30,60,100), labels = c("Niños","Jóvenes","Adultos","Ancianos"))
train$Survived <- as.factor(train$Survived)
PGedad<-ggplot(train, aes(x=GrupoEdad, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
Pembarked <-ggplot(train, aes(x=Embarked, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
Pparch <-ggplot(train, aes(x=Parch, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PClase<-ggplot(train, aes(x=Pclass, fill=Survived)) + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PSexo<-ggplot(train, aes(x=Sex, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PSibSp <- ggplot(train, aes(x=SibSp, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PGedad
Pembarked
Pparch
PClase
PSexo
PSibSp
var.test(x=train[train$Embarked=='S','Fare'],y=train[train$Embarked=='C','Fare'])
var.test(x=train[train$Sex=='male','Age'],y=train[train$Sex=='female','Age'])
train$Survived <- as.numeric(train$Survived)
train$Pclass <- as.numeric(train$Pclass)
cor_table <- cor(train[,c("Survived","Pclass","SibSp","Parch","Fare","Age")],use = "complete.obs")
corrplot.mixed(cor_table,upper="circle",number.cex=.7,tl.cex=.8, title="Correlacion entre variables", mar=c(0,0,1,0))
train$Survived <- as.factor(train$Survived,levels=c(0,1))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(corrplot)
library(faraway)
library(ggfortify)
library(ResourceSelection)
library(pROC)
library(grid)
library(colorspace)
library(Rcpp)
library(vctrs)
library(tidyverse)
library(VIM)
library(ggpubr)
library(caTools)
train <- read.table(file="train.csv",sep=',',dec='.',stringsAsFactors = TRUE,header=TRUE)
summary(train)
test <- read.table(file="test.csv",sep=',',dec='.',stringsAsFactors = TRUE,header=TRUE)
summary(test)
full <- rbind(test,train[-which(names(train) == "Survived")])
full[full$Embarked == "",]
ggplot(full[full$Embarked != "" & full$Pclass == "1",],aes(x=Embarked,y=Fare, fill=Embarked)) + geom_boxplot()+
theme(legend.position="none") + geom_hline(aes(yintercept=80), colour='yellow', linetype='dashed', lwd=2)
full[full$Embarked=="",]$Embarked <- "C"
train[train$Embarked=="",]$Embarked <- "C"
full[is.na(full$Fare),]
ggplot(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,], aes(x=Fare)) +
geom_density(color="darkblue", fill="lightblue",size=1)+ylab("Densidad")+xlab("Precio del pasaje") +
geom_vline(xintercept = median(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare),color="red",size=1.1,linetype="dashed") +
geom_vline(xintercept = mean(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare),color="green",size=1.1,linetype="dashed") +
annotate(geom = "text", label = c("Mediana", "Media"), x = c(median(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare), mean(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare)), y = c(0.05, 0.05), angle = 90, vjust = 1)
fare_median <-  median(full[!is.na(full$Fare) & full$Pclass == "3" & full$Embarked == "S" ,]$Fare)
full[is.na(full$Fare),]$Fare <- fare_median
test[is.na(test$Fare),]$Fare <- fare_median
full[full$Fare == 0,]
median_fare_1 <- median(full[full$Fare != 0 & full$Pclass == 1 & full$Embarked == 'S',]$Fare)
median_fare_2 <- median(full[full$Fare != 0 & full$Pclass == 2 & full$Embarked == 'S',]$Fare)
median_fare_3 <- median(full[full$Fare != 0 & full$Pclass == 3 & full$Embarked == 'S',]$Fare)
#Imputamos según la clase en los dataset que hemos generado:
full[full$Fare == 0 & full$Pclass == 1,]$Fare <- median_fare_1
full[full$Fare == 0 & full$Pclass == 2,]$Fare <- median_fare_2
full[full$Fare == 0 & full$Pclass == 3,]$Fare <- median_fare_3
train[train$Fare == 0 & train$Pclass == 1,]$Fare <- median_fare_1
train[train$Fare == 0 & train$Pclass == 2,]$Fare <- median_fare_2
train[train$Fare == 0 & train$Pclass == 3,]$Fare <- median_fare_3
test[test$Fare == 0 & test$Pclass == 1,]$Fare <- median_fare_1
#Los siguientes casos no existen en el dataset de test:
#test[test$Fare == 0 & test$Pclass == 2,]$Fare <- median_fare_2
#test[test$Fare == 0 & test$Pclass == 3,]$Fare <- median_fare_3
full_imp <- kNN(full,k=11,dist_var=c('Sex','Pclass','SibSp','Fare','Parch','Embarked'),variable='Age')
ggplot() +
geom_density(data=full_imp, aes(x=Age,color='Imputado') , size=1) +
geom_density(data=full, aes(x=Age, color = 'No imputado') ,size=1) +
geom_vline(xintercept = median(full$Age,na.rm = TRUE),color="blue",size=1.1,linetype="dashed") +
geom_vline(xintercept = median(full_imp$Age),color="red",size=1.1,linetype="dashed") +
ylab("Frecuencia") + xlab("Edad") + theme(legend.position = 'right') +
scale_color_manual("DataSet",values = c('Imputado' = 'red', 'No imputado' = 'blue'))
full$Age <- full_imp$Age
train <- merge(train, full_imp[c('PassengerId','Age')], by.x=c("PassengerId"), by.y=c("PassengerId"), all.x=TRUE)
train <- train[,-which(names(train) %in% c("Age.x","PassengerId.y"))]
train <- train %>% rename( Age = Age.y )
test <- merge(test, full_imp[c('PassengerId','Age')], by.x=c("PassengerId"), by.y=c("PassengerId"), all.x=TRUE)
test <- test[,-which(names(test) %in% c("Age.x","PassengerId.y"))]
test <- test %>% rename( Age = Age.y )
borrar<-c("PassengerId","Name","Ticket","Pclass","Embarked","Survived","Sex","Cabin" )
fullr<-full[,!names(full) %in% borrar]
boxplot(fullr, col=rainbow(ncol(fullr)))
min(boxplot.stats(full$Age)$out)
max(boxplot.stats(full$Age)$out)
min(boxplot.stats(full$Fare)$out)
max(boxplot.stats(full$Fare)$out)
#Edad
train$GrupoEdad <- cut(train$Age, breaks = c(0,16,30,60,100), labels = c("Niños","Jóvenes","Adultos","Ancianos"))
train$Survived <- as.factor(train$Survived)
PGedad<-ggplot(train, aes(x=GrupoEdad, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
Pembarked <-ggplot(train, aes(x=Embarked, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
Pparch <-ggplot(train, aes(x=Parch, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PClase<-ggplot(train, aes(x=Pclass, fill=Survived)) + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PSexo<-ggplot(train, aes(x=Sex, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PSibSp <- ggplot(train, aes(x=SibSp, fill=Survived))  + geom_bar(position='fill') + ylab('Porcentaje de supervivientes')
PGedad
Pembarked
Pparch
PClase
PSexo
PSibSp
var.test(x=train[train$Embarked=='S','Fare'],y=train[train$Embarked=='C','Fare'])
var.test(x=train[train$Sex=='male','Age'],y=train[train$Sex=='female','Age'])
train$Survived_num <- as.numeric(train$Survived)
train$Pclass_num <- as.numeric(train$Pclass)
cor_table <- cor(train[,c("Survived_num","Pclass_num","SibSp","Parch","Fare","Age")],use = "complete.obs")
corrplot.mixed(cor_table,upper="circle",number.cex=.7,tl.cex=.8, title="Correlacion entre variables", mar=c(0,0,1,0))
test_prop <- function(x,NC){
p1 <- sum(x$Survived == 1 & x$Pclass== 3) / sum(x$Pclass== 3)
p2 <- sum(x$Survived == 1 & x$Pclass!=3) / sum(x$Pclass!= 3)
#Podemos calcular p sin necesidad de utilizar la formula de arriba
p <- sum(x$Survived == 1) / nrow(x)
n1 <- sum(x$Pclass== 3)
n2 <- sum(x$Pclass!= 3)
zobs <- (p1-p2)/sqrt(p*(1-p)*((1/n1)+(1/n2)))
zcrit <- qnorm(1-NC/100, lower.tail=TRUE)
pobs <- pnorm(zobs,lower.tail=TRUE)
round(c(zobs,zcrit,pobs,p1,p2),3)
}
test_prop(train,95)
test_prop <- function(x,NC){
p1 <- sum(x$Survived == 1 & x$Pclass== 3) / sum(x$Pclass== 3)
p2 <- sum(x$Survived == 1 & x$Pclass!=3) / sum(x$Pclass!= 3)
#Podemos calcular p sin necesidad de utilizar la formula de arriba
p <- sum(x$Survived == 1) / nrow(x)
n1 <- sum(x$Pclass== 3)
n2 <- sum(x$Pclass!= 3)
zobs <- (p1-p2)/sqrt(p*(1-p)*((1/n1)+(1/n2)))
zcrit <- qnorm(1-NC/100, lower.tail=TRUE)
pobs <- pnorm(zobs,lower.tail=TRUE)
round(c(zobs,zcrit,pobs,p1,p2),3)
}
test_prop(train,97)
test_prop <- function(x,NC){
p1 <- sum(x$Survived == 1 & x$Pclass== 3) / sum(x$Pclass== 3)
p2 <- sum(x$Survived == 1 & x$Pclass!=3) / sum(x$Pclass!= 3)
#Podemos calcular p sin necesidad de utilizar la formula de arriba
p <- sum(x$Survived == 1) / nrow(x)
n1 <- sum(x$Pclass== 3)
n2 <- sum(x$Pclass!= 3)
zobs <- (p1-p2)/sqrt(p*(1-p)*((1/n1)+(1/n2)))
zcrit <- qnorm(1-NC/100, lower.tail=TRUE)
pobs <- pnorm(zobs,lower.tail=TRUE)
round(c(zobs,zcrit,pobs,p1,p2),5)
}
test_prop(train,97)
M0 <- glm( formula = Survived ~ Pclass, data = train, family=binomial(link=logit))
summary(M0)
M0 <- glm( formula = Survived ~ Pclass + Sex, data = train, family=binomial(link=logit))
summary(M0)
M1 <- glm( formula = Survived ~ Pclass + Sex + Embarked, data = train, family=binomial(link=logit))
summary(M1)
M1 <- glm( formula = Survived ~ Pclass + Sex + Embarked + Age, data = train, family=binomial(link=logit))
summary(M1)
M3 <- glm( formula = Survived ~ Pclass + Sex + Embarked + Age + SibSp, data = train, family=binomial(link=logit))
summary(M3)
M3 <- glm( formula = Survived ~ Pclass + Sex + Embarked + Age + SibSp + Parch, data = train, family=binomial(link=logit))
summary(M3)
M3 <- glm( formula = Survived ~ Pclass + Sex + Embarked + Age + SibSp , data = train, family=binomial(link=logit))
summary(M3)
M3 <- glm( formula = Survived ~ Pclass + Sex + Embarked + Age + SibSp + Parch, data = train, family=binomial(link=logit))
summary(M3)
M3 <- glm( formula = Survived ~ Pclass + Sex + Embarked + Age + SibSp , data = train, family=binomial(link=logit))
summary(M3)
M3 <- glm( formula = Survived ~ Pclass + Sex + Embarked + Age + SibSp + Parch, data = train, family=binomial(link=logit))
summary(M3)
M3 <- glm( formula = Survived ~ Pclass + Sex + Embarked + Age + SibSp , data = train, family=binomial(link=logit))
summary(M3)
M3 <- glm( formula = Survived ~ Pclass + Sex + Embarked + Age + SibSp + Parch, data = train, family=binomial(link=logit))
summary(M3)
M3 <- glm( formula = Survived ~ Pclass + Sex + Embarked + Age + Parch, data = train, family=binomial(link=logit))
summary(M3)
M3 <- glm( formula = Survived ~ Pclass + Sex + Embarked + Age + Parch + SibSp, data = train, family=binomial(link=logit))
summary(M3)
M3 <- glm( formula = Survived ~ Pclass + Sex + Embarked + Age + Parch , data = train, family=binomial(link=logit))
summary(M3)
M3 <- glm( formula = Survived ~ Pclass + Sex + Embarked + Age + Parch , data = train, family=binomial(link=logit))
M3$AIC
M3 <- glm( formula = Survived ~ Pclass + Sex + Embarked + Age + Parch , data = train, family=binomial(link=logit))
M3$aic
M3 <- glm( formula = Survived ~ Pclass + Sex + Embarked + Age + Parch , data = train, family=binomial(link=logit))
M3$aic
M4 <- glm( formula = Survived ~ Pclass + Sex + Embarked + Age + SibSp , data = train, family=binomial(link=logit))
M4$aic
M5 <- glm( formula = Survived ~ Pclass + Sex + Embarked + Age + Parch + SibSp, data = train, family=binomial(link=logit))
M5$aic
ggarrange(PSexo, PGedad, PClase, labels = c("S", "E", "C"), ncol = 1, nrow = 3)
summary(M5)
predict(M5, test, type="response")
result <- predict(M5, test, type="response")
res_df <- data.frame(test$PassengerId,result)
res_df
result <- predict(M5, test, type="response")
res_df <- data.frame(test$PassengerId,result)
res_df$result_n <- ifelse(res_df$result < 0.5, 0,1)
res_df
real_res <- read.table(file="gender_submission.csv",sep=',',dec='.',stringsAsFactors = TRUE,header=TRUE)
real_res <- read.table(file="gender_submission.csv",sep=',',dec='.',stringsAsFactors = TRUE,header=TRUE)
pred_vs_real <- merge(real_res,res_df, by.x=c("PassengerId"), by.y=c("PassengerId"), all.x=TRUE)
real_res
real_res <- read.table(file="gender_submission.csv",sep=',',dec='.',stringsAsFactors = TRUE,header=TRUE)
pred_vs_real <- merge(real_res,res_df, by=c("PassengerId"), all.x=TRUE)
summary(real_res)
summary(res_df)
result <- predict(M5, test, type="response")
res_df <- data.frame(test$PassengerId,result)
res_df$result_n <- ifelse(res_df$result < 0.5, 0,1)
res_df <- res_df %>% rename( PassengerId = test.PassengerId )
real_res <- read.table(file="gender_submission.csv",sep=',',dec='.',stringsAsFactors = TRUE,header=TRUE)
pred_vs_real <- merge(real_res,res_df, by=c("PassengerId"), all.x=TRUE)
res_df
sum(pred_vs_real[pred_vs_real$Survived == pred_vs_real$result_n,])
sum(pred_vs_real$Survived == pred_vs_real$result_n)
sum(pred_vs_real$Survived == pred_vs_real$result_n)/nrow(real_res)
sum(pred_vs_real$Survived == pred_vs_real$result_n)/nrow(pred_vs_real)
knitr::opts_chunk$set(echo = TRUE)
prob <- predict(M5, train, type="response")
r <- roc(train$Survived,prob,data=train)
library(ggplot2)
library(corrplot)
library(faraway)
library(ggfortify)
library(ResourceSelection)
library(pROC)
library(grid)
library(colorspace)
library(Rcpp)
library(vctrs)
library(tidyverse)
library(VIM)
library(ggpubr)
library(caTools)
prob <- predict(M5, train, type="response")
r <- roc(train$Survived,prob,data=train)
plot (r)
auc(r)
